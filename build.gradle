plugins {
    id "io.spring.dependency-management" version "1.1.6" apply false
    id 'org.springframework.boot' version '3.3.4'
    id 'org.sonarqube' version '5.1.0.4882'
    id "org.owasp.dependencycheck" version "10.0.4"
    id 'test-report-aggregation'
    id 'jacoco'
}

ext {
    infraVersion = System.properties['infraVersion'] ?: '4.0.0-SNAPSHOT'
    apachePoiVersion = "5.2.4"
    commonsIOVersion = "2.17.0"
    mapstructVersion = "1.5.5.Final"
    picocliVersion = "4.7.6"
    shedlockSpringVersion = "4.46.0"
    springDocVersion = "1.7.0"
    springSecurityOauth2Version = "2.5.2.RELEASE"
    randomBeansVersion = "3.9.0"

    nodeVersion = "12.22.12"
    npmVersion = "6.14.16"

    ineraMavenRepository = 'https://nexus.drift.inera.se/repository/it-public/'

    springbootMavenBomVersion = "3.3.4"

    nvdMirror = 'https://vulnz-nvd-mirror-devtest.intyg.nordicmedtest.se'
}

allprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'war'

    group = 'se.inera.intyg.intygsadmin'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'
    sourceCompatibility = 11
    targetCompatibility = 11

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}"
        }
    }

    dependencies {
        implementation "org.apache.commons:commons-lang3"

        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        testImplementation "io.github.benas:random-beans:${randomBeansVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "org.junit.platform:junit-platform-runner"
        testImplementation "org.mockito:mockito-core"
        testImplementation "org.mockito:mockito-junit-jupiter"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testImplementation "org.springframework.security:spring-security-test"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    }

    test { useJUnitPlatform() }

    repositories {
        mavenLocal()
        maven { url "${ineraMavenRepository}" }
        mavenCentral()
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/testability/**",
                    "**/integrationtest/**"
            ])
        }))
    }
}

sonar {
    properties {
        property "sonar.projectKey", "intyg-intygsadmin"
        property "sonar.projectName", "intyg-intygsadmin"
        property "sonar.dependencyCheck.jsonReportPath", "${layout.buildDirectory.get()}/reports/dependency-check-report.json" as String
        property "sonar.dependencyCheck.htmlReportPath", "${layout.buildDirectory.get()}/reports/dependency-check-report.html" as String
    }
}

dependencyCheck {
    formats = List.of("HTML", "JSON")
    nvd.setDatafeedUrl(nvdMirror)
    analyzers.setAssemblyEnabled(false)
}

reporting {
    subprojects.collect { subproject -> subproject.name }.each { subprojectName ->
        dependencies { testReportAggregation project(":${subprojectName}") }
    }
}
